name: Deploy Locus Backend to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.11.0"

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Create deployment package
        run: |
          tar -czf deploy_package.tar.gz dist/ package*.json

      - name: Create SSH key
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.VPS_SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key

      - name: Add Known Hosts
        run: |
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" >> ~/.ssh/known_hosts

      - name: Deploy to VPS
        run: |
          # Create .env file content
          ENV_CONTENT="JWT_SECRET=\"${{ secrets.JWT_SECRET }}\"\n\
          FRONTEND_URL=\"${{ secrets.FRONTEND_URL }}\"\n\
          FRONTEND_DEV_URL=\"${{ secrets.FRONTEND_DEV_URL }}\"\n\
          PORT=${{ secrets.PORT }}\n\
          NODE_ENV=production"

          # Copy deployment package to VPS
          scp -i ~/.ssh/deploy_key deploy_package.tar.gz ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/var/www/locus-backend/

          # Deploy and update environment
          ssh -i ~/.ssh/deploy_key ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "
            export PATH=/home/deploy/.nvm/versions/node/v22.11.0/bin:\$PATH &&
            cd /var/www/locus-backend &&
            
            # Backup current .env if it exists
            [ -f .env ] && cp .env .env.backup || true
            
            # Clean up old files (keep node_modules)
            sudo rm -rf dist/ package*.json &&
            
            # Extract new files
            sudo tar xzf deploy_package.tar.gz &&
            sudo rm deploy_package.tar.gz &&
            
            # Fix ownership
            sudo chown -R deploy:deploy . &&
            
            # Update .env
            echo -e \"$ENV_CONTENT\" > .env &&
            
            # Install production dependencies
            npm ci --omit=dev &&
            
            # Restart PM2
            pm2 reload all --update-env
          " 
