name: Deploy Locus Backend to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.11.0"

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Create SSH key
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.VPS_SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key

      - name: Add Known Hosts
        run: |
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" >> ~/.ssh/known_hosts

      - name: Deploy to VPS
        run: |
          # Create .env file content
          ENV_CONTENT="JWT_SECRET=\"${{ secrets.JWT_SECRET }}\"\n\
          FRONTEND_URL=\"${{ secrets.FRONTEND_URL }}\"\n\
          FRONTEND_DEV_URL=\"${{ secrets.FRONTEND_DEV_URL }}\"\n\
          PORT=${{ secrets.PORT }}\n\
          NODE_ENV=production"

          # Deploy and update environment
          ssh -i ~/.ssh/deploy_key ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "
            export PATH=/home/deploy/.nvm/versions/node/v22.11.0/bin:\$PATH &&
            cd /var/www/locus-backend &&
            
            # Create new release directory
            RELEASE_DIR=\"releases/\$(date +%Y%m%d%H%M%S)\" &&
            mkdir -p \$RELEASE_DIR &&
            
            # Ensure the deploy key is available for git
            if [ ! -f ~/.ssh/id_ed25519 ]; then
              cp ~/.ssh/authorized_keys ~/.ssh/id_ed25519.pub 2>/dev/null || true
            fi
            chmod 600 ~/.ssh/id_ed25519 2>/dev/null || true
            
            # Add github.com to known_hosts
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            
            # Clone repository into release directory using SSH
            git clone git@github.com:estebanbasili/locus-back.git \$RELEASE_DIR &&
            cd \$RELEASE_DIR &&
            
            # Create .env file
            echo -e \"$ENV_CONTENT\" > .env &&
            
            # Install dependencies and build
            npm ci &&
            npm run build &&
            npm ci --omit=dev &&
            
            # Update symlinks
            cd /var/www/locus-backend &&
            ln -nfs \$RELEASE_DIR current &&
            
            # Restart PM2
            pm2 reload all --update-env
          " 
