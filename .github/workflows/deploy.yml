name: Deploy Locus Backend to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.11.0"

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: |
          npm run build
          # Ensure data directory exists and copy data files
          mkdir -p dist/data
          cp -r src/data/* dist/data/
          # Verify data files were copied
          echo "Contents of dist/data directory:"
          ls -la dist/data/
          echo "First few lines of work.json:"
          cat dist/data/work.json | head -n 5

      - name: Create deployment package
        run: |
          tar -czf deploy_package.tar.gz dist/ package*.json

      - name: Create SSH key
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.VPS_SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key

      - name: Add Known Hosts
        run: |
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" >> ~/.ssh/known_hosts

      - name: Deploy to VPS
        run: |
          # Create .env file content
          ENV_CONTENT="JWT_SECRET=\"${{ secrets.JWT_SECRET }}\"\n\
          FRONTEND_URL=\"${{ secrets.FRONTEND_URL }}\"\n\
          FRONTEND_DEV_URL=\"${{ secrets.FRONTEND_DEV_URL }}\"\n\
          PORT=${{ secrets.PORT }}\n\
          NODE_ENV=production"

          # Copy deployment package to VPS
          scp -i ~/.ssh/deploy_key deploy_package.tar.gz ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/var/www/locus-backend/

          # Deploy and update environment
          ssh -i ~/.ssh/deploy_key ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "
            export PATH=/home/deploy/.nvm/versions/node/v22.11.0/bin:\$PATH &&
            cd /var/www/locus-backend &&
            
            # Backup current .env if it exists
            [ -f .env ] && cp .env .env.backup || true
            
            # Create new release directory with timestamp
            RELEASE_DIR=\"releases/\$(date +%Y%m%d%H%M%S)\" &&
            mkdir -p \"\$RELEASE_DIR\" &&
            
            # Extract files to the release directory
            tar xzf deploy_package.tar.gz -C \"\$RELEASE_DIR\" &&
            rm -f deploy_package.tar.gz &&
            
            # Ensure proper permissions
            chmod -R 755 \"\$RELEASE_DIR\" &&
            
            # Verify data files in the new release
            echo 'Verifying data files in new release...' &&
            ls -la \"\$RELEASE_DIR/dist/data/\" &&
            
            # Update current symlink
            rm -f current &&
            ln -s \"\$RELEASE_DIR\" current &&
            
            # Create .env in the new release
            echo -e \"$ENV_CONTENT\" > \"\$RELEASE_DIR/.env\" &&
            
            # Install production dependencies
            cd \"\$RELEASE_DIR\" &&
            npm ci --omit=dev &&
            
            # Restart PM2 with the new release
            cd /var/www/locus-backend &&
            pm2 delete all || true &&
            pm2 flush &&
            pm2 start ecosystem.config.js --env production --wait-ready &&
            pm2 save
            
            # Final verification of data files
            echo 'Final verification of data files:' &&
            ls -la current/dist/data/ &&
            echo 'Content of work.json:' &&
            head -n 5 current/dist/data/work.json
          " 
